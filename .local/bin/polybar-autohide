#!/usr/bin/env sh

get_script_pid() {
  echo $(ps -aux | grep "$1 enable" | grep -v "grep" | awk '{ print $2 }')
}

is_window_fullscreen() {
  CURRENT_WID=$(xdotool getactivewindow)
  if [ -n "$CURRENT_WID" ]; then
    xprop -id "$CURRENT_WID" | grep "_NET_WM_STATE_FULLSCREEN"
  fi
}

get_mouse_y() {
  xdotool getmouselocation | grep -oE "y:([0-9]+)" | grep -oE "([0-9]+)"
}

autohide_watchdog() {
  IS_VISIBLE="true"
  while [ true ]; do
    POS_Y=$(get_mouse_y)
    if [ "$IS_VISIBLE" == "true" ] && [ "$POS_Y" -gt 26 ]; then
      polybar-msg cmd hide > /dev/null 2>&1
      IS_VISIBLE="false"
    elif [ "$IS_VISIBLE" == "false" ] && [ "$POS_Y" -lt "5" ] && [ -z "$(is_window_fullscreen)" ]; then
      polybar-msg cmd show > /dev/null 2>&1
      IS_VISIBLE="true"
    fi
    sleep 1s
  done
}

enable() {
  PID=$(get_script_pid "$1" | awk '{ print $1 }')
  if [ ! -z "$PID" ] && [ "${PID}" -ne "$$" ]; then
    echo "$1 is already enabled"
  else
    autohide_watchdog &
    echo "$1 is enabled"
  fi
}

disable() {
  PID=$(get_script_pid "$1")
  if [ ! -z "$PID" ]; then
    kill "$PID"
    polybar-msg cmd show > /dev/null 2>&1
    echo "$1 is disabled"
  else
    echo "$1 is not enabled"
  fi
}

toggle() {
  PID=$(get_script_pid "$1")
  if [ -z "$PID" ]; then
    sh -c "$1 enable"
  else
    disable "$1"
  fi
}

help() {
  echo "$1: A script to enable, disable or toggle polybar autohide"
  echo "Usage: $1 [enable|disable|toggle]"
}

case "$1" in
  enable)
    enable "$0"
    ;;
  disable)
    disable "$0"
    ;;
  toggle)
    toggle "$0"
    ;;
  help)
    help "$0"
    ;;
  *)
    help "$0"
    exit 1
    ;;
esac
